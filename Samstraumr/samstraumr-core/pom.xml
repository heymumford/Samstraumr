<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2025 Eric C. Mumford (@heymumford)

This software was developed with analytical assistance from AI tools 
including Claude 3.7 Sonnet, Claude Code, and Google Gemini Deep Research,
which were used as paid services. All intellectual property rights 
remain exclusively with the copyright holder listed above.

Licensed under the Mozilla Public License 2.0
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.s8r</groupId>
    <artifactId>samstraumr</artifactId>
    <version>2.6.0</version>
  </parent>

  <artifactId>samstraumr-core</artifactId>
  <name>Samstraumr Core</name>
  <description>Core framework components for the Samstraumr project</description>

  <properties>
    <!-- Main class for exec plugin -->
    <exec.mainClass>org.s8r.app.CliApplication</exec.mainClass>
  </properties>

  <dependencies>
    <!-- Core dependencies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <!-- Version managed by parent -->
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j2-impl</artifactId>
      <!-- Version managed by parent -->
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <!-- Version managed by parent -->
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <!-- Version managed by parent -->
    </dependency>

    <!-- Document generation -->
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>itextpdf</artifactId>
      <!-- Version managed by parent -->
    </dependency>
    
    <!-- Additional dependencies -->
    <dependency>
      <groupId>com.github.oshi</groupId>
      <artifactId>oshi-core</artifactId>
      <!-- Version managed by parent -->
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <!-- Version managed by parent -->
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <!-- Version managed by parent -->
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <!-- Version managed by parent -->
    </dependency>

    <!-- Testing dependencies -->
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <!-- Version managed by parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit-platform-engine</artifactId>
      <!-- Version managed by parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-core</artifactId>
      <!-- Version managed by parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-plugin</artifactId>
      <!-- Version managed by parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit</artifactId>
      <!-- Version managed by parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <!-- Version managed by parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <!-- Version managed by parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <!-- Version managed by parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite</artifactId>
      <!-- Version managed by parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite-api</artifactId>
      <!-- Version managed by parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <!-- Version managed by parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <!-- Version managed by parent -->
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <!-- Version managed by parent -->
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <compilerArgs>
            <arg>--add-opens</arg>
            <arg>java.base/java.lang=ALL-UNNAMED</arg>
            <arg>--add-opens</arg>
            <arg>java.base/java.util=ALL-UNNAMED</arg>
            <arg>--add-opens</arg>
            <arg>java.base/java.lang.reflect=ALL-UNNAMED</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <argLine>
            --add-opens java.base/java.lang=ALL-UNNAMED
            --add-opens java.base/java.util=ALL-UNNAMED
            --add-opens java.base/java.lang.reflect=ALL-UNNAMED
          </argLine>
          <includes>
            <include>**/*Test.java</include>
            <include>**/*Tests.java</include>
            <include>**/Run*.java</include>
          </includes>
          <testFailureIgnore>true</testFailureIgnore>
          <skipTests>false</skipTests>
          <systemPropertyVariables>
            <junit.jupiter.extensions.autodetection.enabled>true</junit.jupiter.extensions.autodetection.enabled>
          </systemPropertyVariables>
          <!-- Run the architecture test suite -->
          <test>org.s8r.architecture.RunArchitectureTests</test>
        </configuration>
        <!-- Removed junit-platform-surefire-provider dependency as it's no longer needed with Surefire 3.2.5 -->
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>
      
      <!-- Execute architecture documentation generation during build -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${maven.exec.plugin.version}</version>
        <executions>
          <execution>
            <id>generate-diagrams</id>
            <phase>pre-site</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${project.basedir}/../../bin/generate-diagrams.sh</executable>
              <arguments>
                <argument>--async</argument>
                <argument>--format</argument>
                <argument>svg</argument>
                <argument>--type</argument>
                <argument>all</argument>
              </arguments>
              <workingDirectory>${project.basedir}/../..</workingDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
          <include>**/*.feature</include>
          <include>**/*.md</include>
        </includes>
      </testResource>
    </testResources>
  </build>

  <profiles>
    <profile>
      <id>unit-tests</id>
      <properties>
        <cucumber.filter.tags>@UnitTest or @TubeTest</cucumber.filter.tags>
      </properties>
    </profile>
    <profile>
      <id>component-tests</id>
      <properties>
        <cucumber.filter.tags>@ComponentTest</cucumber.filter.tags>
      </properties>
    </profile>
    <profile>
      <id>atl-tests</id>
      <properties>
        <cucumber.filter.tags>@ATL</cucumber.filter.tags>
      </properties>
    </profile>
    <profile>
      <id>btl-tests</id>
      <properties>
        <cucumber.filter.tags>@BTL</cucumber.filter.tags>
      </properties>
    </profile>
    <profile>
      <id>orchestration-tests</id>
      <properties>
        <cucumber.filter.tags>@OrchestrationTest</cucumber.filter.tags>
      </properties>
    </profile>
    <profile>
      <id>all-tests</id>
      <properties>
        <cucumber.filter.tags>not @disabled</cucumber.filter.tags>
      </properties>
    </profile>
    <profile>
      <id>architecture-tests</id>
      <properties>
        <groups>architecture</groups>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <groups>architecture</groups>
              <includes>
                <include>**/Run*Tests.java</include>
                <include>**/*Test.java</include>
              </includes>
              <argLine>
                --add-opens java.base/java.lang=ALL-UNNAMED
                --add-opens java.base/java.util=ALL-UNNAMED
                --add-opens java.base/java.lang.reflect=ALL-UNNAMED
              </argLine>
              <systemPropertyVariables>
                <junit.jupiter.extensions.autodetection.enabled>true</junit.jupiter.extensions.autodetection.enabled>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>