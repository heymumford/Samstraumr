<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.samstraumr</groupId>
  <artifactId>samstraumr-modules</artifactId>
  <version>0.4</version>
  <packaging>pom</packaging>
  <name>Samstraumr Modules</name>

  <modules>
    <module>samstraumr-core</module>
  </modules>

  <properties>
    <!-- Version configuration - Import from file -->
    <version.file.path>${project.basedir}/version.properties</version.file.path>

    <!-- Project version - used until properties are loaded -->
    <samstraumr.version>0.4</samstraumr.version>

    <!-- Core properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>

    <!-- Test configuration -->
    <atl.test.tags>@ATL</atl.test.tags>
    <btl.test.tags>@BTL</btl.test.tags>
    <all.test.tags>@ATL or @BTL</all.test.tags>
    <skip.quality.checks>false</skip.quality.checks>

    <!-- Maven plugin versions -->
    <maven.compiler.plugin.version>3.11.0</maven.compiler.plugin.version>
    <maven.surefire.plugin.version>3.2.5</maven.surefire.plugin.version>
    <maven.resources.plugin.version>3.3.1</maven.resources.plugin.version>
    <properties.plugin.version>1.2.0</properties.plugin.version>

    <!-- Quality check plugin versions -->
    <spotless.plugin.version>2.40.0</spotless.plugin.version>
    <pmd.plugin.version>3.21.2</pmd.plugin.version>
    <checkstyle.plugin.version>3.3.1</checkstyle.plugin.version>
    <spotbugs.plugin.version>4.8.2.0</spotbugs.plugin.version>
    <jacoco.plugin.version>0.8.11</jacoco.plugin.version>

    <!-- Quality tool versions -->
    <pmd.version>7.10.0</pmd.version>
    <checkstyle.version>10.14.0</checkstyle.version>
    <spotless.google.format.version>1.17.0</spotless.google.format.version>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Properties file plugin to read version information -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>${properties.plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>read-project-properties</goal>
              </goals>
              <phase>initialize</phase>
              <configuration>
                <files>
                  <file>${version.file.path}</file>
                </files>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.plugin.version}</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
            <compilerArgs>
              <arg>-Xlint:deprecation</arg>
            </compilerArgs>
            <!-- Enable incremental compilation for faster builds -->
            <useIncrementalCompilation>true</useIncrementalCompilation>
          </configuration>
        </plugin>

        <!-- Surefire plugin for test execution -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin.version}</version>
          <configuration>
            <!-- This allows overriding cucumber.filter.tags via command line -->
            <systemPropertyVariables>
              <cucumber.filter.tags>${cucumber.filter.tags}</cucumber.filter.tags>
            </systemPropertyVariables>
            <!-- Optimize for performance -->
            <forkCount>1.5C</forkCount>
            <reuseForks>true</reuseForks>
            <parallel>classes</parallel>
            <perCoreThreadCount>true</perCoreThreadCount>
            <useUnlimitedThreads>false</useUnlimitedThreads>
            <trimStackTrace>false</trimStackTrace>
          </configuration>
        </plugin>

        <!-- Spotless plugin for code formatting -->
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless.plugin.version}</version>
          <configuration>
            <java>
              <includes>
                <include>src/main/java/**/*.java</include>
                <include>src/test/java/**/*.java</include>
              </includes>
              <importOrder>
                <order>java,javax,org,com,</order>
              </importOrder>
              <removeUnusedImports/>
              <googleJavaFormat>
                <version>${spotless.google.format.version}</version>
                <style>GOOGLE</style>
              </googleJavaFormat>
              <trimTrailingWhitespace/>
              <endWithNewline/>
              <encoding>UTF-8</encoding>
              <lineEndings>UNIX</lineEndings>
            </java>
            <pom>
              <includes>
                <include>pom.xml</include>
                <include>**/pom.xml</include>
              </includes>
              <sortPom>
                <expandEmptyElements>false</expandEmptyElements>
              </sortPom>
              <encoding>UTF-8</encoding>
              <lineEndings>UNIX</lineEndings>
            </pom>
            <markdown>
              <includes>
                <include>**/*.md</include>
              </includes>
              <endWithNewline/>
              <trimTrailingWhitespace/>
              <encoding>UTF-8</encoding>
              <lineEndings>UNIX</lineEndings>
            </markdown>
            <yaml>
              <includes>
                <include>**/*.yml</include>
                <include>**/*.yaml</include>
              </includes>
              <endWithNewline/>
              <trimTrailingWhitespace/>
              <encoding>UTF-8</encoding>
              <lineEndings>UNIX</lineEndings>
            </yaml>
          </configuration>
          <executions>
            <execution>
              <id>spotless-check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>validate</phase>
              <configuration>
                <skip>${skip.quality.checks}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- PMD plugin for code analysis -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${pmd.plugin.version}</version>
          <configuration>
            <failOnViolation>true</failOnViolation>
            <printFailingErrors>true</printFailingErrors>
            <linkXRef>false</linkXRef>
            <analysisCache>true</analysisCache>
            <includeTests>true</includeTests>
            <sourceEncoding>UTF-8</sourceEncoding>
            <targetJdk>${maven.compiler.target}</targetJdk>
            <rulesets>
              <ruleset>/category/java/bestpractices.xml/UnusedPrivateMethod</ruleset>
              <ruleset>/category/java/errorprone.xml/EmptyCatchBlock</ruleset>
              <ruleset>${project.basedir}/pmd-ruleset.xml</ruleset>
            </rulesets>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-core</artifactId>
              <version>${pmd.version}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-java</artifactId>
              <version>${pmd.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>pmd-check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>validate</phase>
              <configuration>
                <skip>${skip.quality.checks}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Checkstyle plugin for coding standards -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${checkstyle.plugin.version}</version>
          <configuration>
            <configLocation>${project.basedir}/checkstyle.xml</configLocation>
            <encoding>UTF-8</encoding>
            <consoleOutput>true</consoleOutput>
            <failsOnError>true</failsOnError>
            <linkXRef>false</linkXRef>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>checkstyle-check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>validate</phase>
              <configuration>
                <skip>${skip.quality.checks}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- SpotBugs plugin for bug detection -->
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs.plugin.version}</version>
          <configuration>
            <effort>Max</effort>
            <threshold>Medium</threshold>
            <xmlOutput>true</xmlOutput>
            <failOnError>true</failOnError>
          </configuration>
          <executions>
            <execution>
              <id>spotbugs-check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>verify</phase>
              <configuration>
                <skip>${skip.quality.checks}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- JaCoCo plugin for code coverage -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.plugin.version}</version>
          <executions>
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <goals>
                <goal>report</goal>
              </goals>
              <phase>test</phase>
            </execution>
            <execution>
              <id>check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <rules>
                  <rule>
                    <element>BUNDLE</element>
                    <limits>
                      <limit>
                        <counter>INSTRUCTION</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>0.70</minimum>
                      </limit>
                      <limit>
                        <counter>BRANCH</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>0.70</minimum>
                      </limit>
                    </limits>
                  </rule>
                </rules>
                <skip>${skip.quality.checks}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- Load version properties -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
      </plugin>

      <!-- Code formatting -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <!-- Profile definitions for ATL and BTL test execution -->
  <profiles>
    <profile>
      <id>atl-tests</id>
      <properties>
        <cucumber.filter.tags>${atl.test.tags}</cucumber.filter.tags>
      </properties>
    </profile>
    <profile>
      <id>btl-tests</id>
      <properties>
        <cucumber.filter.tags>${btl.test.tags}</cucumber.filter.tags>
      </properties>
    </profile>
    <profile>
      <id>all-tests</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <cucumber.filter.tags>${all.test.tags}</cucumber.filter.tags>
      </properties>
    </profile>
    <profile>
      <id>quality-checks</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>skip-quality-checks</id>
      <properties>
        <skip.quality.checks>true</skip.quality.checks>
      </properties>
    </profile>
    <!-- Fast development profile for quick iterations -->
    <profile>
      <id>fast</id>
      <properties>
        <skip.quality.checks>true</skip.quality.checks>
        <maven.test.skip>true</maven.test.skip>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <skipTests>true</skipTests>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <optimize>false</optimize>
              <debug>true</debug>
              <failOnWarning>false</failOnWarning>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
