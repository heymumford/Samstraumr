name: s8r-ci

run-name: s8r-ci

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: # Manual trigger

jobs:
  # Basic compilation and verification - keeping it simple for TDD development
  basic-verification:
    name: Basic Verification (${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['21']  # Primary target is Java 21
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/samstraumr
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Environment awareness
        run: |
          echo "Environment Information:"
          echo "CPU cores: $(nproc)"
          echo "Memory: $(free -h)"
          java -version
          echo "Working directory: $(pwd)"
          ls -la

      # Get version for summary using the improved version tool
      - name: Get version
        id: get_version
        run: |
          # Use the s8r-version tool if available
          if [ -f "./s8r-version" ]; then
            VERSION=$(./s8r-version get | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')
          elif [ -f "Samstraumr/version.properties" ]; then
            # Extract the version from properties as fallback
            VERSION=$(grep "samstraumr.version=" "Samstraumr/version.properties" | cut -d= -f2 | tr -d ' \t\n\r')
          else
            # Fallback version if we can't determine it
            VERSION="0.0.0"
          fi
          
          # Set the output variable
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "::notice::s8r v$VERSION"

      - name: Set Job Summary
        run: |
          echo "# ðŸš€ Building s8r v${{ steps.get_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Version: ${{ steps.get_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Running verification as part of CI pipeline." >> $GITHUB_STEP_SUMMARY

      # Basic compilation check - this is the key step that ensures no orchestration or compilation errors
      - name: Verify compilation
        run: |
          # Add Java 21 module options required for reflection
          export JAVA_OPTS="--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.reflect=ALL-UNNAMED"
          mvn -B clean compile -DskipTests

      # Basic verification without test execution
      - name: Verify basic project structure
        run: |
          # Add Java 21 module options required for reflection
          export JAVA_OPTS="--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.reflect=ALL-UNNAMED"
          mvn -B verify -DskipTests -Dmaven.javadoc.skip=true -Dspotless.check.skip=true -Dcheckstyle.skip=true -Dspotbugs.skip=true

      # Run unit tests with improved runner
      - name: Run unit tests
        run: |
          # Add Java 21 module options required for reflection
          export JAVA_OPTS="--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.reflect=ALL-UNNAMED"
          # Use the enhanced test runner with our custom settings
          ./s8r-test unit --coverage
          
      # Run component tests with improved runner
      - name: Run component tests
        run: |
          # Add Java 21 module options required for reflection
          export JAVA_OPTS="--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.reflect=ALL-UNNAMED"
          # Use the enhanced test runner with our custom settings
          ./s8r-test component
          
      # Publish Test Results
      - name: Publish Test Results
        uses: dorny/test-reporter@v2
        if: success() || failure()
        with:
          name: JUnit Tests
          path: '**/target/surefire-reports/TEST-*.xml'
          reporter: java-junit
          fail-on-error: false
          
      # Upload summary with basic results
      - name: Upload build summary
        if: always()
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Basic compilation and verification completed for s8r v${{ steps.get_version.outputs.version }}." >> $GITHUB_STEP_SUMMARY
          echo "This pipeline checks for compilation, basic project structure, and tests as part of TDD-based development." >> $GITHUB_STEP_SUMMARY

  # Clean Architecture verification job
  architecture-verification:
    name: Clean Architecture Verification
    runs-on: ubuntu-latest
    needs: basic-verification
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # Run Clean Architecture verification tests
      - name: Verify Clean Architecture compliance
        run: |
          echo "Verifying Clean Architecture compliance..."
          # Add Java 21 module options required for reflection
          export JAVA_TOOL_OPTIONS="--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang.reflect=ALL-UNNAMED"
          
          # Run the architecture verification script
          if [ -f "./s8r-architecture-verify" ]; then
            ./s8r-architecture-verify --output=architecture-report.md
          else
            # Fallback to direct Maven test execution
            cd Samstraumr && mvn test -Dtest=CleanArchitectureComplianceTest,AcyclicDependencyTest -q
          fi

      # Generate summary with Clean Architecture verification results
      - name: Generate Architecture Report Summary
        if: always()
        run: |
          if [ -f "architecture-report.md" ]; then
            echo "## Clean Architecture Verification Summary" >> $GITHUB_STEP_SUMMARY
            grep -A 5 "## Summary" architecture-report.md >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "See full report in artifacts for more details." >> $GITHUB_STEP_SUMMARY
          else
            echo "## Clean Architecture Verification Summary" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Architecture verification completed - see test results for details." >> $GITHUB_STEP_SUMMARY
          fi

      # Upload architecture verification report
      - name: Upload Architecture Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: architecture-report
          path: architecture-report.md
          retention-days: 14
          if-no-files-found: ignore