name: Build, Test, and Analyze
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: # Manual trigger
  
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better SonarQube analysis
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven
      
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Get system information
        run: |
          echo "CPU cores: $(nproc)"
          echo "Memory: $(free -h)"
          java -version
      
      - name: Run optimized ATL tests
        run: |
          chmod +x ./build-performance.sh
          ./build-performance.sh test -P atl-tests
      
      - name: Run quality checks
        if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
        run: |
          chmod +x ./build-checks.sh
          ./build-checks.sh
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/target/cucumber-reports/
            **/target/surefire-reports/
            **/target/site/jacoco/
            **/target/pmd.xml
            **/target/checkstyle-result.xml
            **/target/spotbugsXml.xml
          retention-days: 7
  
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better SonarQube analysis
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven
      
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: test-reports
      
      - name: SonarQube analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=heymumford_Samstraumr \
            -Dsonar.projectName="Samstraumr" \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.coverage.jacoco.xmlReportPaths=**/target/site/jacoco/jacoco.xml \
            -Dsonar.java.spotbugs.reportPaths=**/target/spotbugsXml.xml \
            -Dsonar.java.pmd.reportPaths=**/target/pmd.xml \
            -Dsonar.java.checkstyle.reportPaths=**/target/checkstyle-result.xml