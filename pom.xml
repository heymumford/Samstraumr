<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (c) 2025 Eric C. Mumford (@heymumford)

This software was developed with analytical assistance from AI tools 
including Claude 3.7 Sonnet, Claude Code, and Google Gemini Deep Research,
which were used as paid services. All intellectual property rights 
remain exclusively with the copyright holder listed above.

Licensed under the Mozilla Public License 2.0
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.s8r</groupId>
  <artifactId>samstraumr-parent</artifactId>
  <version>3.0.2</version>
  <name>Samstraumr Parent</name>
  <packaging>pom</packaging>
  <description>
    Parent POM for the Samstraumr project that defines shared properties, 
    plugin management, dependency management, and profiles.
  </description>

  <modules>
    <module>modules</module>
    <module>test-module</module>
    <module>test-port-interfaces</module>
  </modules>

  <properties>
    <!-- Basic project settings -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    
    <!-- Version information -->
    <version.file.path>${project.basedir}/modules/version.properties</version.file.path>
    
    <!-- Test tagging -->
    <all.test.tags>@ATL</all.test.tags>
    <test.tags>@ATL</test.tags>
    
    <!-- Core dependencies -->
    <archunit.version>1.4.0</archunit.version>
    <slf4j.version>2.0.17</slf4j.version>
    <log4j.version>2.22.1</log4j.version>
    <junit.version>5.10.1</junit.version>
    <junit.platform.version>1.10.1</junit.platform.version>
    <cucumber.version>7.15.0</cucumber.version>
    <cucumber.reporting.version>5.7.7</cucumber.reporting.version>
    <mockito.version>5.8.0</mockito.version>
    <jackson.version>2.14.2</jackson.version>
    <oshi.version>6.4.1</oshi.version>
    <spotbugs.annotations.version>4.7.3</spotbugs.annotations.version>
    <itextpdf.version>5.5.13.3</itextpdf.version>
    
    <!-- Plugin versions -->
    <pmd.plugin.version>3.21.0</pmd.plugin.version>
    <owasp.plugin.version>8.4.2</owasp.plugin.version>
    <findsecbugs.version>1.13.0</findsecbugs.version>
    <javadoc.plugin.version>3.6.3</javadoc.plugin.version>
    <maven.enforcer.plugin.version>3.4.1</maven.enforcer.plugin.version>
    <maven.compiler.plugin.version>3.12.1</maven.compiler.plugin.version>
    <maven.surefire.plugin.version>3.2.5</maven.surefire.plugin.version>
    <maven.resources.plugin.version>3.3.1</maven.resources.plugin.version>
    <maven.exec.plugin.version>3.1.0</maven.exec.plugin.version>
    <spotless.plugin.version>2.40.0</spotless.plugin.version>
    <spotless.google.format.version>1.19.2</spotless.google.format.version>
    <checkstyle.plugin.version>3.3.1</checkstyle.plugin.version>
    <checkstyle.version>10.14.0</checkstyle.version>
    <spotbugs.plugin.version>4.8.3.0</spotbugs.plugin.version>
    <jacoco.plugin.version>0.8.11</jacoco.plugin.version>
    <jacoco.line.coverage>0.80</jacoco.line.coverage>
    <jacoco.branch.coverage>0.80</jacoco.branch.coverage>
    <maven.site.plugin.version>4.0.0-M13</maven.site.plugin.version>
    <maven.project.info.reports.plugin.version>3.5.0</maven.project.info.reports.plugin.version>
    <dependency-check.version>9.0.7</dependency-check.version>
  </properties>
  
  <!-- Dependency management to ensure consistent versions across modules -->
  <dependencyManagement>
    <dependencies>
      <!-- Logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j2-impl</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      
      <!-- Jackson -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      
      <!-- Utils -->
      <dependency>
        <groupId>com.github.oshi</groupId>
        <artifactId>oshi-core</artifactId>
        <version>${oshi.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-annotations</artifactId>
        <version>${spotbugs.annotations.version}</version>
      </dependency>
      <dependency>
        <groupId>com.itextpdf</groupId>
        <artifactId>itextpdf</artifactId>
        <version>${itextpdf.version}</version>
      </dependency>
      
      <!-- Testing - JUnit -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-suite</artifactId>
        <version>${junit.platform.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-suite-api</artifactId>
        <version>${junit.platform.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-launcher</artifactId>
        <version>${junit.platform.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-suite-engine</artifactId>
        <version>${junit.platform.version}</version>
        <scope>test</scope>
      </dependency>
      
      <!-- Testing - Cucumber -->
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-java</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-junit</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-junit-platform-engine</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-core</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.cucumber</groupId>
        <artifactId>cucumber-plugin</artifactId>
        <version>${cucumber.version}</version>
        <scope>test</scope>
      </dependency>
      
      <!-- Testing - Mockito -->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.plugin.version}</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>
        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin.version}</version>
          <configuration>
            <argLine>
              --add-opens java.base/java.lang=ALL-UNNAMED
              --add-opens java.base/java.util=ALL-UNNAMED
              --add-opens java.base/java.lang.reflect=ALL-UNNAMED
            </argLine>
            <includes>
              <include>**/*Test.java</include>
              <include>**/*Tests.java</include>
              <include>**/*TestSuite.java</include>
            </includes>
            <excludes>
              <exclude>**/isolated/**</exclude>
            </excludes>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.junit.jupiter</groupId>
              <artifactId>junit-jupiter-engine</artifactId>
              <version>${junit.version}</version>
            </dependency>
            <dependency>
              <groupId>org.junit.vintage</groupId>
              <artifactId>junit-vintage-engine</artifactId>
              <version>${junit.version}</version>
            </dependency>
            <dependency>
              <groupId>org.junit.platform</groupId>
              <artifactId>junit-platform-suite-engine</artifactId>
              <version>${junit.platform.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.resources.plugin.version}</version>
          <configuration>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>
        
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless.plugin.version}</version>
          <configuration>
            <java>
              <googleJavaFormat>
                <version>${spotless.google.format.version}</version>
                <style>GOOGLE</style>
              </googleJavaFormat>
              <removeUnusedImports />
              <importOrder>
                <order>java,javax,org,com,</order>
              </importOrder>
            </java>
            <xml>
              <includes>
                <include>**/src/**/*.xml</include>
                <include>**/pom.xml</include>
              </includes>
              <eclipseWtp>
                <type>XML</type>
              </eclipseWtp>
            </xml>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${checkstyle.plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <configLocation>quality-tools/checkstyle/checkstyle.xml</configLocation>
            <failOnViolation>false</failOnViolation>
            <consoleOutput>true</consoleOutput>
            <failsOnError>true</failsOnError>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs.plugin.version}</version>
          <configuration>
            <effort>Max</effort>
            <threshold>Medium</threshold>
            <xmlOutput>true</xmlOutput>
            <excludeFilterFile>quality-tools/spotbugs/spotbugs-exclude.xml</excludeFilterFile>
            <failOnError>false</failOnError>
            <plugins>
              <plugin>
                <groupId>com.h3xstream.findsecbugs</groupId>
                <artifactId>findsecbugs-plugin</artifactId>
                <version>${findsecbugs.version}</version>
              </plugin>
            </plugins>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.h3xstream.findsecbugs</groupId>
              <artifactId>findsecbugs-plugin</artifactId>
              <version>${findsecbugs.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.plugin.version}</version>
          <configuration>
            <excludes>
              <exclude>**/*Test.class</exclude>
              <exclude>**/*Steps.class</exclude>
              <exclude>**/*Exception.class</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${pmd.plugin.version}</version>
          <configuration>
            <skip>false</skip>
            <skipEmptyReport>true</skipEmptyReport>
            <excludeFromFailureFile>quality-tools/pmd/pmd-exclude.properties</excludeFromFailureFile>
          </configuration>
          <executions>
            <execution>
              <id>pmd-check</id>
              <phase>verify</phase>
              <goals>
                <goal>check</goal>
                <goal>cpd-check</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-core</artifactId>
              <version>3.0.2</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-java</artifactId>
              <version>3.0.2</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-javascript</artifactId>
              <version>3.0.2</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-jsp</artifactId>
              <version>3.0.2</version>
            </dependency>
          </dependencies>
        </plugin>
        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${javadoc.plugin.version}</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <doclint>all,-missing</doclint>
            <failOnWarnings>false</failOnWarnings>
            <detectJavaApiLink>true</detectJavaApiLink>
            <quiet>true</quiet>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
            <execution>
              <id>check-javadoc</id>
              <phase>verify</phase>
              <goals>
                <goal>javadoc</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  
  <profiles>
    <profile>
      <id>atl-tests</id>
      <properties>
        <cucumber.filter.tags>${atl.test.tags}</cucumber.filter.tags>
      </properties>
    </profile>
    
    <profile>
      <id>skip-tests</id>
      <properties>
        <skipTests>true</skipTests>
        <maven.test.skip>true</maven.test.skip>
      </properties>
    </profile>
    
    <profile>
      <id>enable-tests</id>
      <activation>
        <property>
          <name>enableTests</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
        <skipTests>false</skipTests>
        <maven.test.skip>false</maven.test.skip>
      </properties>
    </profile>
    
    <profile>
      <id>tdd-development</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <jacoco.line.coverage>0.80</jacoco.line.coverage>
        <jacoco.branch.coverage>0.80</jacoco.branch.coverage>
      </properties>
    </profile>
    
    <profile>
      <id>coverage</id>
      <properties>
        <jacoco.skip>false</jacoco.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>check</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <rules>
                    <rule>
                      <element>BUNDLE</element>
                      <limits>
                        <limit>
                          <counter>LINE</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${jacoco.line.coverage}</minimum>
                        </limit>
                        <limit>
                          <counter>BRANCH</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${jacoco.branch.coverage}</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>quality-checks</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>validate</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <executions>
              <execution>
                <phase>validate</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>security-checks</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <version>${owasp.plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <!-- Enhanced Quality Profile -->
    <profile>
      <id>enhanced-quality</id>
      <build>
        <plugins>
          <!-- PMD with enhanced ruleset -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>${pmd.plugin.version}</version>
            <configuration>
              <skip>false</skip>
              <skipEmptyReport>true</skipEmptyReport>
              <rulesets>
                <ruleset>quality-tools/pmd/pmd-enhancements.xml</ruleset>
              </rulesets>
              <excludeFromFailureFile>quality-tools/pmd/pmd-exclude.properties</excludeFromFailureFile>
            </configuration>
            <executions>
              <execution>
                <id>pmd-enhanced-check</id>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                  <goal>cpd-check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          
          <!-- SpotBugs with enhanced configuration -->
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <configuration>
              <effort>Max</effort>
              <threshold>Low</threshold> <!-- Lower threshold to catch more issues -->
              <xmlOutput>true</xmlOutput>
              <excludeFilterFile>quality-tools/spotbugs/spotbugs-strict.xml</excludeFilterFile>
              <failOnError>false</failOnError> <!-- Initially set to false to avoid breaking builds -->
              <plugins>
                <plugin>
                  <groupId>com.h3xstream.findsecbugs</groupId>
                  <artifactId>findsecbugs-plugin</artifactId>
                  <version>${findsecbugs.version}</version>
                </plugin>
              </plugins>
            </configuration>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          
          <!-- Enforce strict Javadoc -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <source>${maven.compiler.source}</source>
              <doclint>all</doclint> <!-- Enforce all Javadoc rules -->
              <failOnWarnings>true</failOnWarnings> <!-- Fail on Javadoc warnings -->
              <detectJavaApiLink>true</detectJavaApiLink>
              <quiet>true</quiet>
            </configuration>
            <executions>
              <execution>
                <id>check-enhanced-javadoc</id>
                <phase>verify</phase>
                <goals>
                  <goal>javadoc</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          
          <!-- Strict checkstyle rules -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <configuration>
              <configLocation>quality-tools/checkstyle/checkstyle.xml</configLocation>
              <failOnViolation>true</failOnViolation> <!-- Fail on checkstyle violations -->
              <consoleOutput>true</consoleOutput>
              <failsOnError>true</failsOnError>
              <includeTestSourceDirectory>true</includeTestSourceDirectory>
              <violationSeverity>warning</violationSeverity> <!-- Treat warnings as errors -->
            </configuration>
            <executions>
              <execution>
                <phase>validate</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>build-report</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <version>${maven.site.plugin.version}</version>
            <configuration>
              <locales>en</locales>
              <generateReports>true</generateReports>
              <generateSitemap>true</generateSitemap>
              <relativizeDecorationLinks>false</relativizeDecorationLinks>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <reporting>
        <outputDirectory>${project.build.directory}/samstraumr-report</outputDirectory>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-project-info-reports-plugin</artifactId>
            <version>${maven.project.info.reports.plugin.version}</version>
            <configuration>
              <dependencyDetailsEnabled>true</dependencyDetailsEnabled>
              <dependencyLocationsEnabled>true</dependencyLocationsEnabled>
            </configuration>
            <reportSets>
              <reportSet>
                <reports>
                  <report>index</report>
                  <report>summary</report>
                  <report>team</report>
                  <report>dependencies</report>
                  <report>plugins</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
          
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.plugin.version}</version>
            <reportSets>
              <reportSet>
                <reports>
                  <report>report</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>
  </profiles>
</project>